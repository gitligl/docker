apiVersion: v1
kind: Pod
metadata:
  name: mysql
  namespace: lglns
  labels:
    app: mysql-server
spec:
  hostname: mysql
  nodeSelector:
    env: test
  containers:
  - name: mysql
    image: mysql:5.7
    ports:
    - containerPort: 3306
      name: mysqlport
# 利用volume的方式使用secret
    volumeMounts:
    # 名为mysql的secret挂载在mysql容器的/run/secrets/kubernetes.io/mysql目录下。mysql-secrets内有多少个字段，则mysql目录下就有多少个以字段为文件名的文件
    - name: mysql
      mountPath: "/run/secrets/kubernetes.io/mysql"
      readOnly: true
    - name: mysqlvolume
      mountPath: /var/lib/mysql
    env:
    # mysql的root密码以MYSQL_ROOT_PASSWORD_FILE形式指定。MYSQL_ROOT_PASSWORD_FILE文件内存放着mysql的root用户密码
    - name: MYSQL_ROOT_PASSWORD_FILE
      value: "/run/secrets/kubernetes.io/mysql/mysql-root-password"
  volumes:
  # mysql-secrets以secret的形式挂载到mysql容器中，命名为mysql
  - name: mysql
    secret:
      secretName: mysql-secrets
  - name: mysqlvolume
    persistentVolumeClaim:
      claimName: mysqlpvc

# 利用环境变量的方式使用secret
#    env:
#      - name: MYSQL_ROOT_PASSWORD
#        valueFrom: 
#          secretKeyRef:
#            name: mysql-secrets
#            key: mysql-root-password
#      - name: MYSQL_USER
#        valueFrom:
#          secretKeyRef:
#            name: mysql-secrets
#            key: mysql-user
#      - name: MYSQL_PASSWORD
#        valueFrom:
#          secretKeyRef:
#            name: mysql-secrets
#            key: mysql-password

---
apiVersion: v1
kind: Service
metadata:
  name: mysql-svc
  namespace: lglns
spec:
  type: NodePort
  selector:
    app: mysql-server
  ports:
  - port: 3306
    targetPort: mysqlport
    nodePort: 30036
